name: Rust

on:
  push:
    branches: [ master]
  pull_request:
    branches: [ master, dev]
  workflow_dispatch:

jobs:
  ci-safety:
    name: ci-safety
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@c7f87aa956e4c323abf06d5dec078e358f6b4d04
      - name: run zizmor ci analysis tool
        run: uvx zizmor --format sarif . > results.sarif 
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
          category: zizmor

  build:
    name : build-latest-stable
    runs-on: ubuntu-22.04
    # version used in release process to guarantee old-GLIBC compatibility

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - uses: dtolnay/rust-toolchain@stable
    - name: Build
      run: cargo build --verbose --release --locked --target x86_64-unknown-linux-gnu 

  buildmsrv:
    name: build-msrv
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@1.65
      - name: build
        run: cargo build --release --locked

  buildnightly:
    name: build-nightly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@nightly
      - name: build
        run: cargo build --release --locked --target x86_64-unknown-linux-gnu 

  unittest:
    name: unit & integration tests
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@stable
      - run: './ressources/install_all_compilers_ci.sh'
      - uses: oven-sh/setup-bun@4bc047ad259df6fc24a6c9b0f9a0cb08cf17fbe5
      - uses: dlang-community/setup-dlang@2979e3ea011f6a234cd3a47dcbeb60f451c9635f
      - uses: erlef/setup-beam@5304e04ea2b355f03681464e683d92e3b2f18451
        with:
          otp-version: "24.2"
          elixir-version: "1.14"
      - name: Unit tests
        run: cargo test --release --features ignore_in_ci
      - name: integration tests
        run: cargo test --release --features ignore_in_ci --test integration

  install:
    name: install (download)
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: installation tests
      run: ./install.sh
