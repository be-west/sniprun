name: Rust

on:
  push:
    branches: [ master]
  pull_request:
    branches: [ master, dev]
  workflow_dispatch:

jobs:
  build:
    name : build-latest-stable
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Build
      run: cargo build --verbose --release --target x86_64-unknown-linux-gnu 

  buildmsrv:
    name: build-msrv
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - run: "rm Cargo.lock"
      - name: Install Rust 1.65 toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.65
          override: true
      - name: build
        run: cargo build --release

  buildnightly:
    name: build-nightly
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: build
        run: cargo build --release --target x86_64-unknown-linux-gnu 

  unittest:
    name: unit & integration tests
    runs-on: ubuntu-20.04
    steps:

    - uses: actions/checkout@v4
      with:
        persist-credentials: false

    - run: './ressources/install_all_compilers_ci.sh'

    - uses: oven-sh/setup-bun@v1

    - uses: dlang-community/setup-dlang@v1

    - uses: erlef/setup-beam@v1
      with:
        otp-version: "23"
        elixir-version: "1.14"


    - name: Unit tests
      run: cargo test --release --features ignore_in_ci

    - name: integration tests
      run: cargo test --release --features ignore_in_ci --test integration




  install:
    name: install (download)
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: installation tests
      run: ./install.sh


